package(default_visibility = ["//visibility:public"])

licenses(["notice"])  # Apache license (for libapr1)

cc_library(
    name = "libaprutil1",
    srcs = glob([
        "include/private/apu_*.h",
        "include/private/apr_*.h",
    ]) + [
        "buckets/apr_brigade.c",
        "buckets/apr_buckets.c",
        "buckets/apr_buckets_alloc.c",
        "buckets/apr_buckets_eos.c",
        "buckets/apr_buckets_file.c",
        "buckets/apr_buckets_flush.c",
        "buckets/apr_buckets_heap.c",
        "buckets/apr_buckets_mmap.c",
        "buckets/apr_buckets_pipe.c",
        "buckets/apr_buckets_pool.c",
        "buckets/apr_buckets_refcount.c",
        "buckets/apr_buckets_simple.c",
        "buckets/apr_buckets_socket.c",
        "crypto/apr_crypto.c",
        "crypto/apr_md4.c",
        "crypto/apr_md5.c",
        "crypto/apr_sha1.c",
        "crypto/apr_siphash.c",
        "crypto/crypt_blowfish.c",
        "crypto/crypt_blowfish.h",
        "crypto/getuuid.c",
        "crypto/uuid.c",
        "dbd/apr_dbd.c",
        "dbd/apr_dbd_pgsql.c",
        "dbd/apr_dbd_sqlite3.c",
        "dbm/apr_dbm.c",
        "dbm/apr_dbm_sdbm.c",
        "dbm/sdbm/sdbm.c",
        "dbm/sdbm/sdbm_hash.c",
        "dbm/sdbm/sdbm_lock.c",
        "dbm/sdbm/sdbm_pair.c",
        "dbm/sdbm/sdbm_pair.h",
        "dbm/sdbm/sdbm_private.h",
        "dbm/sdbm/sdbm_tune.h",
        "encoding/apr_base64.c",
        "hooks/apr_hooks.c",
        "ldap/apr_ldap_stub.c",
        "ldap/apr_ldap_url.c",
        "memcache/apr_memcache.c",
        "misc/apr_date.c",
        "misc/apr_queue.c",
        "misc/apr_reslist.c",
        "misc/apr_rmm.c",
        "misc/apr_thread_pool.c",
        "misc/apu_dso.c",
        "misc/apu_version.c",
        "redis/apr_redis.c",
        "strmatch/apr_strmatch.c",
        "uri/apr_uri.c",
        "xlate/xlate.c",
        "xml/apr_xml.c",
    ],
    hdrs = [
        "include/apr_anylock.h",
        "include/apr_base64.h",
        "include/apr_buckets.h",
        "include/apr_crypto.h",
        "include/apr_date.h",
        "include/apr_dbd.h",
        "include/apr_dbm.h",
        "include/apr_hooks.h",
        "include/apr_ldap.h",
        "include/apr_ldap_init.h",
        "include/apr_ldap_option.h",
        "include/apr_ldap_rebind.h",
        "include/apr_ldap_url.h",
        "include/apr_md4.h",
        "include/apr_md5.h",
        "include/apr_memcache.h",
        "include/apr_optional.h",
        "include/apr_optional_hooks.h",
        "include/apr_queue.h",
        "include/apr_redis.h",
        "include/apr_reslist.h",
        "include/apr_rmm.h",
        "include/apr_sdbm.h",
        "include/apr_sha1.h",
        "include/apr_siphash.h",
        "include/apr_strmatch.h",
        "include/apr_thread_pool.h",
        "include/apr_uri.h",
        "include/apr_uuid.h",
        "include/apr_xlate.h",
        "include/apr_xml.h",
        "include/apu.h",
        "include/apu_errno.h",
        "include/apu_version.h",
        "include/apu_want.h",
    ],
    copts = [
        "-pthread",
    ],
    defines = [
        "_GNU_SOURCE",
        "HAVE_CONFIG_H",
        "LINUX",
        "REENTRANT",
    ],
    includes = [
        "include",
        "libaprutil/include",
        "include/private",
    ],
    linkopts = [
        "-lpthread",
    ],
    ###strip_include_prefix = "include",
    deps = [
        "@libapr1",
        "@libexpat",
    ],
)
