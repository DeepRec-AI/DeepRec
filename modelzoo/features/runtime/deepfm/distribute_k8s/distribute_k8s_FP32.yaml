apiVersion: "kubeflow.org/v1"
kind: "TFJob"
metadata:
  name: "trainer"
spec:
  cleanPodPolicy: None
  tfReplicaSpecs:
    Chief:
      replicas: 1
      restartPolicy: Never
      template:
        spec:
          volumes:
            - name: deeprec-storage
              persistentVolumeClaim:
                claimName: deeprec
          containers:
            - name: tensorflow
              env:
                - name: 'TF_WORKSPACE'
                  value: '/root/'
                - name: 'TF_SCRIPT'
                  value: 'train.py'
              image: DeepRec_Model_Zoo_DeepFM_training:v1.0
              imagePullPolicy: Always
              workingDir: /root/
              command: ["/bin/sh", "-c"]
              args: ["cd /root/; python launch.py --save_steps=5000 --output_dir=/pvc --protocol=grpc --inter=8 --intra=8 --input_layer_partitioner=8 --dense_layer_partitioner=64"]
              volumeMounts:
                - mountPath: "/pvc"
                  name: "deeprec-storage"
    Worker:
      replicas: 2
      restartPolicy: Never
      template:
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: replica-type
                          operator: In
                          values:
                            - worker
                    topologyKey: kubernetes.io/hostname
          volumes:
            - name: deeprec-storage
              persistentVolumeClaim:
                claimName: deeprec
          containers:
            - name: tensorflow
              env:
                - name: 'TF_WORKSPACE'
                  value: '/root/'
                - name: 'TF_SCRIPT'
                  value: 'train.py'
              image: DeepRec_Model_Zoo_DeepFM_training:v1.0
              imagePullPolicy: Always
              workingDir: /root/
              command: ["/bin/sh", "-c"]
              args: ["cd /root/; python launch.py --save_steps=5000 --output_dir=/pvc --protocol=grpc --inter=8 --intra=8 --input_layer_partitioner=8 --dense_layer_partitioner=64"]
              volumeMounts:
                - mountPath: "/pvc"
                  name: "deeprec-storage"
    PS:
      replicas: 1
      restartPolicy: Never
      template:
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: replica-type
                          operator: In
                          values:
                            - ps
                    topologyKey: kubernetes.io/hostname
          volumes:
            - name: deeprec-storage
              persistentVolumeClaim:
                claimName: deeprec
          containers:
            - name: tensorflow
              env:
                - name: 'TF_WORKSPACE'
                  value: '/root/'
                - name: 'TF_SCRIPT'
                  value: 'train.py'
              image: DeepRec_Model_Zoo_DeepFM_training:v1.0
              imagePullPolicy: Always
              workingDir: /root/
              command: ["/bin/sh", "-c"]
              args: ["cd /root/; python launch.py --save_steps=5000 --output_dir=/pvc --protocol=grpc --inter=8 --intra=8 --input_layer_partitioner=8 --dense_layer_partitioner=64"]
              volumeMounts:
                - mountPath: "/pvc"
                  name: "deeprec-storage"
